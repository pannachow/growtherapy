{"version":3,"sources":["helpers/Auth.js","helpers/Api.js","components/SideDrawer.js","components/UserMenu.js","components/Navigation.js","components/PrivateRoute.js","components/Home.js","components/AboutUs.js","components/Plants.js","components/FAQ.js","components/ContactUs.js","components/Login.js","components/ErrorView.js","components/ProfileView.js","components/SignUp.js","components/Message.js","components/WelcomeBack.js","components/Calendar.js","components/PlantView.js","App.js","index.js"],"names":["Auth","token","userId","localStorage","clear","Number","BASE_URL","process","Api","method","endpoint","body","options","headers","JSON","stringify","getToken","fetch","response","json","data","console","log","ok","error","status","statusText","name","message","useStyles","makeStyles","list","width","fullList","SideDrawer","props","classes","Drawer","anchor","open","onClose","toggleDrawer","className","clsx","role","onClick","onKeyDown","List","Link","color","underline","component","RouterLink","to","ListItem","button","ListItemIcon","ListItemText","primary","theme","root","display","paper","marginRight","spacing","withRouter","React","useState","setOpen","anchorRef","useRef","handleClose","event","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","logout","doLogout","history","push","useEffect","focus","Button","ref","aria-controls","undefined","aria-haspopup","style","fontSize","Popper","anchorEl","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","id","MenuItem","flexGrow","menuButton","title","Navigation","state","setState","type","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","variant","fontWeight","PrivateRoute","exact","path","children","getUserId","heroContent","backgroundImage","padding","heroButtons","marginTop","Home","Container","align","gutterBottom","Grid","container","justify","item","src","alt","AboutUs","top","zIndex","Component","Copyright","Date","getFullYear","icon","cardGrid","paddingTop","paddingBottom","card","height","flexDirection","cardMedia","backgroundSize","cardContent","footer","Plants","plants","setPlants","search","setSearch","plantId","a","request","result","fetchPlants","CssBaseline","paragraph","textAlign","InputBase","value","onChange","e","placeholder","inputRoot","input","inputInput","inputProps","maxWidth","filter","plant","common_name","toUpperCase","includes","map","xs","sm","md","Card","CardMedia","image","growtherapy","image_url","CardContent","light_needs","water_needs","CardActions","size","addPlant","FAQ","Accordion","AccordionSummary","expandIcon","AccordionDetails","href","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","background","ContactUs","onSubmit","emailjs","sendForm","then","text","reset","sendEmail","noValidate","TextField","required","fullWidth","label","autoComplete","rowsMax","auto-complete","Box","mt","backgroundRepeat","grey","backgroundPosition","email","setEmail","password","setPassword","login","elevation","square","Avatar","validators","errorMessages","autoFocus","FormControlLabel","control","Checkbox","ErrorView","code","ProfileView","user","statusCode","this","getProfile","getPlants","u","opacity","first_name","marginBottom","trefle_plant_id","setFirstName","last_name","setLastName","register","Message","WelcomeBack","back","float","marginLeft","forward","circle","borderRadius","Calendar","date","setDate","schedule","calendar","year","month","daysInMonth","getDate","getDaysInMonth","start","emptyCellsInStart","getDay","emptyCellsInEnd","numberOfWeeks","rows","i","row","j","length","dateString","getMonthName","getMonth","getCalendar","TableContainer","previousMonth","nextMonth","Table","TableHead","TableRow","TableCell","TableBody","Array","from","entries","cell","day","getDaysSinceEpoch","interval","Tooltip","getCellContent","Math","floor","sunlight","1","2","3","watering","wateringInterval","PlantView","plantData","match","params","wateringSchedule","gridTemplateColumns","gridTemplateRows","columnGap","scientific_name","family","notes","createMuiTheme","typography","fontFamily","fontWeightRegular","App","loginError","loginUser","logoutUser","newFirstName","newLastName","newEmail","newPassword","newUser","ThemeProvider","p","doLogin","f","l","doSignUp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34b0a9e6.chunk.js","sourcesContent":["/**\n * Auth helper methods\n * All localStorage implementation is here\n **/\n\nclass Auth {\n\n  static loginUser(token, userId) {\n    localStorage.token = token;\n    localStorage.userId = userId;\n  }\n\n  static logoutUser() {\n    localStorage.clear();\n  }\n\n  static getToken() {\n    return (\"token\" in localStorage) ? localStorage.token : \"\";\n  }\n\n  static getUserId() {\n    return (\"userId\" in localStorage) ? Number(localStorage.userId) : null;\n  }\n\n}\n\nexport default Auth;\n","import Auth from \"./Auth\";\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\nclass Api {\n\n    static async request(method, endpoint, body = null) {\n        // Define basic options\n        const options = { \n            method: method,\n            headers: { \"Content-Type\": \"application/json\" }\n         };\n\n        // Add body (if applicable)\n        if (body) {\n            options.body = JSON.stringify(body);\n        }\n\n        // Add JWT token (if exists)\n        const token = Auth.getToken();\n        if (token) {\n            options.headers[\"x-access-token\"] = token;\n        }\n\n        /**\n         * Do the fetch() and create a \"unified\" response.\n         * If server response is received:\n         *      response.ok == true if response.status in 200 range\n         *      response.status has status code\n         *      response.statusText has status text\n         *      response.data has data returned by server\n         *      response.error is response.status + response.statusText\n         * If server did not respond:\n         *      response.ok = false\n         *      response.status = 0\n         *      response.data = null\n         *      response.error is exception error message\n         **/\n\n        let response;\n        try {\n            response = await fetch(BASE_URL+endpoint, options);\n            response.data = await response.json();\n            console.log(\"fetch response:\", response);\n            if (!response.ok) {\n                // Use error message from JSON returned by server, else use fetch() error code/text\n                response.error = response.data.error || `${response.status}: ${response.statusText}`;\n            }\n        } catch (err) {\n            response = {\n                ok: false,\n                data: null,\n                status: 0,\n                error: `${err.name}: ${err.message}`\n            }\n        }\n\n        return response;\n    }\n\n}\n\nexport default Api;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LocalFloristOutlinedIcon from \"@material-ui/icons/LocalFloristOutlined\";\nimport ContactSupportIcon from \"@material-ui/icons/ContactSupport\";\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\nimport BusinessCenterRoundedIcon from \"@material-ui/icons/BusinessCenterRounded\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n});\n\nexport default function SideDrawer(props) {\n  const classes = useStyles();\n\n  return (\n    <Drawer anchor=\"left\" open={props.open} onClose={props.toggleDrawer(false)}>\n      <div\n        className={clsx(classes.list, {\n          [classes.fullList]: false,\n        })}\n        role=\"presentation\"\n        onClick={props.toggleDrawer(false)}\n        onKeyDown={props.toggleDrawer(false)}\n      >\n        <List>\n          <Link color=\"primary\" underline=\"none\" component={RouterLink} to=\"/\">\n            <ListItem button>\n              <ListItemIcon><HomeIcon /></ListItemIcon>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n\n          <Link color=\"primary\" underline=\"none\" component={RouterLink} to=\"/about-us\">\n            <ListItem button>\n              <ListItemIcon><BusinessCenterRoundedIcon /></ListItemIcon>\n              <ListItemText primary=\"About Us\" />\n            </ListItem>\n          </Link>\n\n          <Link color=\"primary\" underline=\"none\" component={RouterLink} to=\"/plants\">\n            <ListItem button>\n              <ListItemIcon><LocalFloristOutlinedIcon /></ListItemIcon>\n              <ListItemText primary=\"Plants\" />\n            </ListItem>\n          </Link>\n\n          <Link color=\"primary\" underline=\"none\" component={RouterLink} to=\"/FAQ\">\n            <ListItem button>\n              <ListItemIcon><ContactSupportIcon /></ListItemIcon>\n              <ListItemText primary=\"FAQ\" />\n            </ListItem>\n          </Link>\n\n          <Link color=\"primary\" underline=\"none\" component={RouterLink} to=\"/contact-us\">\n            <ListItem button>\n              <ListItemIcon><ContactMailIcon /></ListItemIcon>\n              <ListItemText primary=\"Contact Us\" />\n            </ListItem>\n          </Link>\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport Button from \"@material-ui/core/Button\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction UserMenu(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  function logout() {\n    props.doLogout();\n    props.history.push(\"/\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <Button\n        ref={anchorRef}\n        aria-controls={open ? \"menu-list-grow\" : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleToggle}\n      >\n        <AccountCircleIcon style={{ color: \"white\", fontSize: 50 }} />\n      </Button>\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{ transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\" }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                  <Link underline=\"none\" component={RouterLink} to={`/users/${props.userId}/profile`}>\n                    <MenuItem onClick={handleClose}>Profile</MenuItem>\n                  </Link>\n                  <Link underline=\"none\" component={RouterLink} to=\"/\">\n                    <MenuItem onClick={logout}>Logout</MenuItem>\n                  </Link>\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n    </div>\n  );\n}\n\nexport default withRouter(UserMenu);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SideDrawer from \"./SideDrawer\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport UserMenu from \"./UserMenu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Navigation(props) {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    open: false,\n  });\n\n  const toggleDrawer = (open) => (event) => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n    setState({ ...state, open: open });\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton onClick={toggleDrawer(true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Link underline=\"none\" component={RouterLink} to=\"/\" className={classes.title}>\n            <Typography variant=\"h6\" style={{ color: \"white\" }} >\n              GROWTHERAPY\n            </Typography>\n          </Link>\n\n          {props.userId ? (\n            <UserMenu doLogout={props.doLogout} userId={props.userId} />\n          ) : (\n              <>\n                <Link underline=\"none\" component={RouterLink} to=\"/log-in\">\n                  <Button style={{ color: \"#97CD80\", fontWeight: \"bold\" }} >LOG IN</Button>\n                </Link>\n\n                <Link underline=\"none\" component={RouterLink} to=\"/sign-up\">\n                  <Button style={{ color: \"#009472\", fontWeight: \"bold\" }} >SIGN UP</Button>\n                </Link>\n              </>\n            )}\n\n        </Toolbar>\n      </AppBar>\n      <SideDrawer open={state.open} toggleDrawer={toggleDrawer} />\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from \"../helpers/Auth\";\n\nfunction PrivateRoute({ exact, path, component, children }) {\n  const userId = Auth.getUserId();\n  if (!userId) {\n    return <Redirect to=\"/log-in\" />;\n  }\n\n  return (\n    <Route exact={exact} path={path} component={component}>\n      {children}\n    </Route>\n  );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundImage: \"url(home_header.jpg)\",\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div className={classes.heroContent}>\n        <Container >\n          <Typography style={{color: \"white\", fontWeight: \"bold\"}} variant=\"h3\" align=\"center\" gutterBottom>\n            THE&nbsp;&nbsp;PLANTS&nbsp;&nbsp;LOVER\n          </Typography>\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Link underline=\"none\" component={RouterLink} to=\"/plants\">\n                  <Button variant=\"contained\" color=\"primary\">\n                    ALL OUR PLANTS\n                  </Button>\n                </Link>\n              </Grid>\n              \n            </Grid>\n          </div>\n        </Container>\n      </div>\n      <img src=\"home.svg\" alt=\"plants\" />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nclass AboutUs extends React.Component {\n  render() {\n    const background = {\n      position: \"absolute\",\n      top: 0,\n      width: \"100%\",\n      zIndex: -1,\n    };\n    return (\n      <>\n        <br />\n        <br />\n        <Container>\n          <br />\n          <Typography variant=\"h3\" align=\"center\" style={{ color: \"#97CD80\", fontWeight: \"bold\" }} gutterBottom>\n            We are house plant lovers\n        </Typography>\n          <br />\n          <Typography variant=\"h6\" align=\"left\" style={{ color: \"#009472\", fontWeight: \"bold\" }} >\n            Plant therapy – it might sound like a new fad, but in fact, the practice is ancient. Engaging with plants can have a relaxing, peaceful effect on many people. Have fun discovering plants that suit your needs and your environment, get recommendations from us, and start watering your plant today!\n        </Typography>\n          <br />\n        </Container>\n        <img src=\"about-us.jpg\" alt=\"background\" style={background} />\n\n      </>\n    );\n  }\n}\n\nexport default AboutUs;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Auth from \"../helpers/Auth\";\nimport Api from \"../helpers/Api\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" style={{ color: \"white\" }} align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" >\n        GROWTHERAPY\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundImage: \"url(plants_header.jpg)\",\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(7),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"100%\", \n    backgroundSize: \"cover\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundImage: \"url(plants_footer.jpg)\",\n    padding: theme.spacing(6),\n  },\n}));\n\nexport default function Plants() {\n  const classes = useStyles();\n  const [plants, setPlants] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  // Fetch plants from backend\n  // https://reactjs.org/docs/hooks-intro.html\n  // https://www.robinwieruch.de/react-hooks-fetch-data\n  useEffect(() => {\n    async function fetchPlants() {\n      const result = await Api.request(\"GET\", \"/plants/?gt=1\");\n      setPlants(result.data);\n    }\n    fetchPlants();\n  }, []);\n\n\n  function filterSearch(plant) {\n    // Either return true if you want the plant to be shown or otherwise false.\n    if (plant.common_name.toUpperCase().includes(search.toUpperCase())) {\n      return true;\n    }\n    return false;\n  }\n\n  function showLightIcon(light_needs) {\n    if (light_needs === 3) {\n      return <img src=\"./light_3.png\" alt=\"Full direct sunlight.\" width=\"100px\"/>;\n    } if (light_needs === 2) {\n      return <img src=\"./light_2.png\" alt=\"Bright indirect sunlight.\" width=\"100px\"/>; \n    } if (light_needs === 1) {\n      return <img src=\"./light_1.png\" alt=\"Low to indirect sunlight.\" width=\"100px\"/>;\n    }\n    return \"\";\n  }\n\n  function showWaterIcon(water_needs) {\n    if (water_needs === 3) {\n      return <img src=\"./water_3.png\" alt=\"Water thoroughly once a week.\" width=\"65px\" />;\n    } if (water_needs === 2) {\n      return <img src=\"./water_2.png\" alt=\"Water thoroughly every 2 - 3 weeks.\" width=\"65px\" />; \n    } if (water_needs === 1) {\n      return <img src=\"./water_1.png\" alt=\"Water thoroughly once a month.\" width=\"65px\" />;\n    }\n    return \"\";\n  }\n\n  async function addPlant(userId, plantId) {\n    const body = {\n      \"user_id\": userId,\n      \"plant_id\": plantId\n    };\n    await Api.request(\"POST\", `/users/${userId}/favorites`, body);\n  }\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        <div className={classes.heroContent}>\n\n          <Container>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" style={{ color: \"white\" }} gutterBottom>\n              To love the beautiful homeplants\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Find plants and learn to care. Plants for beginners and more!\n            </Typography>\n\n            {/* need to search for the plant */}\n            <div style={{ textAlign: \"center\" }}>\n              <SearchIcon />\n              <InputBase\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n\n              />\n            </div>\n\n          </Container>\n\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {plants.filter(filterSearch).map((plant) => (\n              <Grid item key={plant.id} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n\n                    image={plant.growtherapy.image_url}\n                    title={plant.common_name}\n\n                  />\n                    <CardContent className={classes.cardContent}>\n                      {/* Fetch the back-end plant name here */}\n                      <Typography color=\"secondary\" gutterBottom variant=\"h6\" component=\"h2\">\n                        {plant.common_name}\n                      </Typography>\n\n                      {showLightIcon(plant.growtherapy.light_needs)}\n\n                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n                      {showWaterIcon(plant.growtherapy.water_needs)}\n                    </CardContent>\n\n                  <CardActions>\n                    <Link underline=\"none\" component={RouterLink} to={`/plant-view/${plant.id}`}>\n                      <Button size=\"small\" color=\"primary\">\n                        View\n                      </Button>\n                    </Link>\n\n                    {Auth.getUserId() ? (\n                      <Button size=\"small\" color=\"primary\" onClick={() => addPlant(Auth.getUserId(), plant.growtherapy.id)} >\n                        Add\n                      </Button>\n                    ) : <></>}\n\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n\n      <footer className={classes.footer}>\n        <Typography style={{ color: \"white\" }} variant=\"h6\" align=\"center\" gutterBottom>\n          Don't Forget to Water the Plants!\n        </Typography>\n        <Copyright />\n      </footer>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Link } from \"@material-ui/core\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\n\n\nclass FAQ extends React.Component {\n  render() {\n    return (\n      <Container>\n        <br />\n        <Typography variant=\"h5\" color=\"secondary\">QUESTIONS?</Typography>\n        <br />\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">How do I choose a plant?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              Plants are an easy way to add color, energy and transform your space,\n              but which plant is for you? Choosing the right plant will depend on your style preference,\n              the size of your space and your\n          <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/plants-101/eligible-environments\" target=\"_blank\"> home or office environment</Link>. What kind of plants do you like?\n          From these, decide how much space you can accommodate, then do a little <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/plants-101/top-ten-plant-care-tips\" target=\"_blank\"> digging </Link> to see if these\n          plants are suited to thrive in their new home based on their care requirements.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">I'm a new plant owner. What should I do first?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              Light is food for plants, so the most important part of plant parenthood is feeding your plant babies!\n              Generally, the more light the better. Plants want to be in your window. Some plants can tolerate lower\n              light away from windows, but as a rule, no plant should ever be more than 6 feet from a window.\n          <br />\n              <br />\n          If you brought your new plant home in a grow pot, we suggest <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/care-miscellaneous/plant-care-repotting\" target=\"_blank\"> repotting</Link> it within a week or two.\n          Most plants are often sold in nursery pots or plastic containers which may not exactly fit the decor vibes of your space.\n          They may also be too small for your plant. To repot, choose a pot 1-3 inches larger than the original container.\n          The color, style and fabrication is totally up to you. Add a pop of color with a red clay pot, or keep it light and airy with <Link color=\"secondary\" href=\"https://www.thesill.com/collections/pots\" target=\"_blank\"> white ceramic</Link>.\n          Ideally, your pot will have drainage (that hole at the bottom). If not, line the bottom of the pot with lava rocks, about 1 inch deep.\n          Once your plant is in its new pot, <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/the-basics/drink-up\" target=\"_blank\"> water</Link> the soil for a nice uniform consistency and let the soil dry out completely before the next watering.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">How do I know if my plant is happy in its new home?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              In order to make a plant happy, try your best to recreate its natural environment. For example, succulents\n              and cacti are desert plants. They enjoy being in direct sunlight for as much of the day as possible.\n              Ferns are from misty forests, so they need the high humidity that, say, a bathroom (with a window) brings.\n          It may seem kind of obvious, but not dying is a good thing. If the plant is getting enough light — <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/plants-101/lighten-up\" target=\"_blank\">light is\n          food for plants</Link>  — then it will grow. Don’t be alarmed if a plant doesn’t grow or do much. It may be in a dormancy phase.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">When should I repot my plant?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              If you see one or a combination of these signs, you'll know it's time to repot your plant:\n          <ol>\n                <li>\n                  It’s grown up: You know your plant has outgrown the nursery grow pot if:\n            <br />\n                  <br />\n            – Roots are growing through the drainage holes at the bottom of the grow pot\n            <br />\n                  <br />\n            – Roots are pushing the plant up, out of the grow pot It’s top heavy, and falls over easily It’s growing slower than normal (outside of fall/winter dormancy)\n            <br />\n                  <br />\n            – The size of the plant is three times or more the size of the grow pot\n            </li>\n                <br />\n                <li>\n                  Dry potting mix: Your plant’s potting mix dries out more quickly than usual, requiring more frequent waterings\n            </li>\n                <br />\n                <li>\n                  It’s the season: Your plant could use fresh potting mix and more space for the spring–summer growing season\n            </li>\n              </ol>\n              <br />\n\n          Or you might want to get your hands dirty, and that’s an equally valid reason.\n          Studies have shown that when we get in touch with nature, literally, we reduce mental fatigue and stress,\n          while increasing relaxation and self-esteem. Even brief exposure to nature can make us more altruistic,\n          and touching real foliage can elicit an unconscious calming effect.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">How often should I change my plant’s potting mix?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              In a year or two — if your plant has not overgrown its current planter — you can simply change\n        the potting mix out to provide it with new nutrients. Learn more about potting mixes <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/care-miscellaneous/potting-mix-101\" target=\"_blank\"> here</Link>.\n        <br />\n              <br />\n        Small doses of nutrient-rich <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/care-miscellaneous/plant-care-fertilizer\" target=\"_blank\"> fertilizer</Link> may also be enough to get your potting mix back in tip top shape.\n\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">What indoor plants are the easiest to grow?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              Try philodendron, pothos, rubber plants, mother-in-law's tongue, dracaena, spider plants, cast iron plants, or umbrella plants.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">How do I fertilize my plant?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              We recommend following the instructions on the packaging of whatever fertilize you choose.\n              Many are added to liquids and used in your watering can while watering. All fertilizers,\n              whether liquid, dissolvable, or granular are applied to the potting mix (not the plant\n            itself/the plant's leaves). Learn more about fertilizer <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/care-miscellaneous/plant-care-fertilizer\" target=\"_blank\"> here</Link>.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">Can my plant thrive in artificial light?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              As long as you have the right bulbs. Plants respond best to sunlight,\n              so you’ll want a bulb that fills color and intensity requirements.\n              Most regular bulbs, like the ones in your light fixtures, aren’t sufficient\n              because they produce mostly green light. Green plants reflect green light away\n              instead of absorbing it, so it’s pretty useless to them. Colors like blue, green-blue,\n              yellow-orange and red — especially red light — maximize photosynthesis and other vital functions.\n              White LED lights are fine, but spiral-shaped, white Compact Fluorescent Lamps (CFLs) are best.\n              To get the right intensity, check your bulb’s Lumen count: the higher the better. For example,\n              if your plants require lots of light, opt for a bulb or bulbs which total 3000 lumens or more.\n          <br />\n              <br />\n          Learn more about the importance of light for plants <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/plants-101/lighten-up\" target\n                =\"_blank\"> here</Link>.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">What do yellow leaves mean?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              Yellow leaves can mean a lot of things, not just overwatering! Yellow leaves could\n              mean that the plant is too hot, too cold, not receiving enough water, receiving too much water,\n              nutrient deficient, or it could be totally normal… Take into account where this\n              is happening on the plant — and how many leaves are yellow. Are the lower leaves turning yellow,\n              with only one or two falling off here and there, but the rest of the plant looks fine?\n              Then it’s just old leaves, shedding.\n          <br />\n              <br />\n          To figure out if there’s potentially a watering problem — let the potting mix be your guide\n          and feel it. Is the mix too wet or super dry? Generally, if there’s a watering problem,\n          most leaves on the plant will be affected. If it’s too hot or too cold, well, plants want to\n          be where you want to be (70 and sunny, anyone?). So, if you put your head where the plant is,\n          and it’s too drafty, cold, or hot, then try to move it to another spot with less <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/the-basics/eligible-environments\" target=\"_blank\"> environmental changes</Link>.\n          Remember, yellow leaves never occur without other symptoms unless they are old leaves. It’s identifying\n          those other symptoms that will help you get to the root of the problem.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">Why do leaves drop?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              Leaves usually drop for one of two reasons: (1) either the roots cannot support them,\n              or (2) there is not enough light. In the first case, the plant is pot-bound. Plants can be\n              just as big below ground as they are above ground, so they will drop leaves if the roots cannot grow.\n          In this case, you'll want to <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/care-miscellaneous/plant-care-repotting\" target=\"_blank\"> repot your plant</Link> into a bigger planter with more room for the roots.\n          <br />\n              <br />\n          In the second case, light is food for plants, so the plant literally isn't getting enough food\n          to support the leaves, so it drops them. Help your plant by providing <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/plants-101/lighten-up\" target=\"_blank\"> more sunlight</Link> or doing a little pruning.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">Why is my plant leaning?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              If your plant is leaning, access how much your plant is leaning (a little or a lot?)\n              A little lean is totally normal because, gravity. Also, if it’s a vining plant like a monstera,\n              then leaning is totally normal. Extreme lean, not so much. Both can be corrected with the right\n          amount of <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/plants-101/lighten-up\" target=\"_blank\"> sunlight</Link> and rotation. Remember, plants grow towards sunlight. To fix a slight lean,\n          try rotating your plant every few weeks. If your plant is leaning a lot and you notice new growth\n          to be smaller, pale and spindly, it needs even more sunlight. Try moving your plant closer to the\n          light source and rotate every time you water. If your lean becomes extreme, it could be a deeper-rooted\n          problem: root rot, improper potting and outgrowing the pot are common causes. In these cases, your\n          plant needs to be <Link color=\"secondary\" href=\"https://www.thesill.com/blogs/care-miscellaneous/plant-care-repotting\" target=\"_blank\"> repotted</Link>.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography variant=\"subtitle1\">My flowers are falling off – is my plant dying?</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Typography>\n              No — flowers are just reproductive structures — they come and they go!\n          <br />\n          They fall off when your plant is no longer feeling frisky. The rest of the plant is unaffected.\n          </Typography>\n          </AccordionDetails>\n        </Accordion>\n        <br />\n        <Link color=\"secondary\" underline=\"none\" component={RouterLink} to=\"/contact-us\">\n          {\"Didn't find an answer? Contact us\"}\n        </Link>\n      </Container>\n    );\n  }\n}\n\nexport default FAQ;","import React from \"react\";\nimport emailjs from \"emailjs-com\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nfunction sendEmail(e) {\n  e.preventDefault();\n\n  emailjs.sendForm(\"service_xj11pov\", \"template_9y9kauc\", e.target, \"user_J3m42A7J6CyNZsMpU2kLo\")\n    .then((result) => {\n      console.log(result.text);\n    }, (error) => {\n      console.log(error.text);\n    });\n  e.target.reset();\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\">\n        GROWTHERAPY\n        </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst background = {\n  position: \"absolute\",\n  top: 100,\n  zIndex: -1,\n  width: \"100%\",\n  height: \"80%\"\n};\n\nexport default function ContactUs() {\n\n  const classes = useStyles();\n\n  return (\n    <>\n    <img src=\"contact-us.svg\" alt=\"background\" style={background} />\n\n    <Container maxWidth=\"xs\">\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography color=\"primary\" component=\"h4\" variant=\"h4\">\n          Contact us\n          </Typography>\n        <form onSubmit={(e) => sendEmail(e)} className={classes.form} noValidate>\n\n          <Grid container spacing={2}>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"subject\"\n                label=\"Subject\"\n                type=\"subject\"\n                id=\"subject\"\n                autoComplete=\"subject\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"name\"\n                label=\"Name\"\n                type=\"name\"\n                id=\"name\"\n                autoComplete=\"name\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                rowsMax={20}\n                name=\"message\"\n                label=\"Message\"\n                type=\"message\"\n                id=\"message\"\n                auto-complete=\"message\"\n              />\n            </Grid>\n\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Submit\n            </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n\n              <Link align=\"center\" color=\"black\" component={RouterLink} to=\"/\">\n                <Button\n                  type=\"button\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                >Cancel</Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { ValidatorForm, TextValidator} from \"react-material-ui-form-validator\";\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\">\n        GROWTHERAPY\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(./log-in.svg)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\" ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login(props) {\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const ok = await props.login(email, password);\n    if (ok) {\n      setEmail(\"\");\n      setPassword(\"\");\n      props.history.push(\"/users/:userId/profile\");\n    }\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          {/* Login error message displayed here */}\n          {\n            props.error && (\n              <div>{props.error}</div>\n            )\n          }\n          <ValidatorForm className={classes.form} onSubmit={handleSubmit}>\n            <TextValidator\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              // autoComplete=\"email\"\n              value={email}\n              validators={ [\"required\", \"isEmail\" ]}\n              errorMessages={[ \"this field is required\", \"email is not valid\" ]}\n              onChange={(e) => setEmail(e.target.value)}\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              // autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Log In\n              </Button>\n            <Grid container>\n              <Grid item>\n                <Link color=\"secondary\" underline=\"none\" component={RouterLink} to=\"/sign-up\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </ValidatorForm>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default withRouter(Login);","import React from \"react\";\n\nfunction ErrorView(props) {\n    return (\n        <div className=\"ErrorView\">\n            <h2>Error {props.code}: {props.text}</h2>\n        </div>\n    );\n}\n\nexport default ErrorView;\n","import React from \"react\";\nimport Api from \"../helpers/Api\";\nimport Auth from \"../helpers/Auth\";\nimport ErrorView from \"./ErrorView\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nclass ProfileView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      statusCode: 0,\n      statusText: \"\",\n      plants: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.getProfile();\n    await this.getPlants();\n  }\n\n  async getProfile() {\n    const userId = Auth.getUserId();\n    const response = await Api.request(\"GET\", `/users/${userId}/profile`);\n    if (response.ok) {\n      this.setState({\n        user: response.data,\n        statusCode: 200,\n        statusText: \"\"\n      });\n    } else {\n      this.setState({\n        user: null,\n        statusCode: response.status,\n        statusText: response.statusText\n      });\n    }\n  }\n\n  async getPlants() {\n    const userId = Auth.getUserId();\n    const response = await Api.request(\"GET\", `/users/${userId}/favorites`);\n    this.setState({\n      plants: response.data\n    });\n  }\n\n  render() {\n    if (this.state.statusCode !== 200) {\n      return <ErrorView code={this.state.statusCode} text={this.state.statusText} />\n    }\n\n    if (!this.state.user) {\n      return <h2>Loading...</h2>;\n    }\n\n    let u = this.state.user;\n\n    const background = {\n      position: \"absolute\",\n      top: 70,\n      width: \"100%\",\n      zIndex: -1,\n      opacity: 0.5,\n    };\n\n    const classes = {\n      root: {\n        flexGrow: 1,\n      },\n      paper: {\n        padding: \"20px\",\n        textAlign: \"center\",\n        color: \"#689875\",\n      },\n    };\n\n    return (\n      <div className=\"ProfileView\">\n\n        <img src=\"/background-1.jpg\" alt=\"background\" style={background} />\n\n        <div style={{ textAlign: \"center\" }}>\n          <FaceIcon style={{ fontSize: 80, color: \"#689875\", marginTop: 50 }} />\n          <h1 style={{ color: \"#689875\", fontWeight: \"bold\" }} >Welcome back, {u.first_name}!</h1>\n          <h3 style={{ color: \"#689875\", fontWeight: \"bold\", marginBottom: 50 }} >Email: {u.email}</h3>\n        </div>\n\n        <Container>\n          <div style={classes.root}>\n            <Grid container spacing={4}>\n              {this.state.plants.map((plant) =>\n                <Grid item sm={4}>\n                  <Link underline=\"none\" component={RouterLink} to={`/plant-view/${plant.trefle_plant_id}`}>\n                    <Paper style={classes.paper}>\n                      <img src={plant.image_url} width=\"100%\" height=\"100%\" alt=\"plant-photos\"></img>\n                    </Paper>\n                  </Link>\n                </Grid>\n              )}\n            </Grid>\n          </div>\n        </Container>\n\n      </div>\n    );\n  }\n\n}\n\nexport default ProfileView;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { ValidatorForm, TextValidator} from \"react-material-ui-form-validator\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\">\n        GROWTHERAPY\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignUp(props) {\n  const classes = useStyles();\n  const [first_name, setFirstName] = useState(\"\");\n  const [last_name, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  \n  async function handleSubmit2(event) {\n    event.preventDefault();\n    const ok = await props.register(first_name, last_name, email, password);\n    if (ok) {\n      setFirstName(\"\");\n      setLastName(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      props.history.push(\"/welcome\");\n    } else {\n      props.history.push(\"/welcome-back\")\n    }\n  }\n\n  const background = {\n    position: \"absolute\",\n    top: 0,\n    width: \"85%\",\n    zIndex: -1,\n  };\n\n  return (\n    <>\n    <br/>\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <ValidatorForm className={classes.form} onSubmit={handleSubmit2}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"first_name\"\n                name=\"first_name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"first_name\"\n                label=\"First Name\"\n                autoFocus\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"last_name\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"last_name\"\n                onChange={(e) => setLastName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextValidator\n                variant=\"outlined\"\n                required\n                fullWidth\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                id=\"email\"\n                // autoComplete=\"email\"\n                validators={ [\"required\", \"isEmail\" ]}\n                errorMessages={[ \"this field is required\", \"email is not valid\" ]}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextValidator\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                id=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                // autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              {/* <Link href=\"#\" variant=\"body2\"> */}\n              <Link color=\"secondary\"  underline=\"none\" component={RouterLink} to=\"/log-in\">\n                Already have an account? Log in\n              </Link>\n            </Grid>\n          </Grid>\n        </ValidatorForm>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n    <img src=\"sign-up.svg\" alt=\"flower background\" style={background} />\n    </>\n  );\n}\n\nexport default withRouter(SignUp);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst background = {\n  position: \"absolute\",\n  top: 70,\n  width: \"100%\",\n  zIndex: -1,\n  opacity: 1,\n};\n\nfunction Message() {\n  return (\n    <div>\n      <img src=\"/plant-therapy.jpg\" alt=\"background\" style={background} />\n      <div style={{ textAlign: \"center\" }}>\n        <br />\n        <Typography\n          variant=\"h6\"\n          align=\"center\"\n          style={{ color: \"green\", fontWeight: \"bold\" }}\n          gutterBottom\n        >\n          Registration complete!\n        </Typography>\n        <br />\n        <br />\n        <Typography\n          variant=\"h5\"\n          align=\"center\"\n          style={{ color: \"#97CD80\", fontWeight: \"bold\" }}\n          gutterBottom\n        >\n          \"Let\"s root for each other and watch each other grow.\"\n        </Typography>\n\n        <br />\n        <Link underline=\"none\" component={RouterLink} to=\"/log-in\">\n          <Button variant=\"contained\" color=\"primary\">\n            LOG IN\n          </Button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst background = {\n  position: \"absolute\",\n  top: 70,\n  width: \"100%\",\n  zIndex: -1,\n  opacity: 1,\n};\n\nfunction WelcomeBack() {\n  return (\n    <div>\n      <img src=\"/plant-therapy.jpg\" alt=\"background\" style={background} />\n      <div style={{ textAlign: \"center\" }}>\n        <br />\n        <Typography\n          variant=\"h6\"\n          align=\"center\"\n          style={{ color: \"green\", fontWeight: \"bold\" }}\n          gutterBottom\n        >\n          Hello, stranger. We missed you!\n        </Typography>\n        <br />\n        <br />\n        <Link underline=\"none\" component={RouterLink} to=\"/log-in\">\n          <Button variant=\"contained\" color=\"primary\">\n            LOG IN\n          </Button>\n        </Link>\n        <br />\n        <br />\n\n        <Button size=\"small\" color=\"primary\">\n          I forgot my password\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default WelcomeBack;\n","import React, { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  back: {\n    float: \"left\",\n    marginLeft: \"2px\",\n    marginTop: \"2px\",\n  },\n  title: {\n    marginTop: \"8px\",\n    textAlign: \"center\",\n  },\n  forward: {\n    float: \"right\",\n    marginRight: \"2px\",\n    marginTop: \"2px\",\n  },\n  circle: {\n    backgroundColor: theme.palette.secondary.main,\n    width: 21,\n    height: 21,\n    display: \"inline-block\",\n    textAlign: \"center\",\n    borderRadius: \"50%\",\n  },\n}));\n\nexport default function Calendar(props) {\n  const classes = useStyles();\n  const [date, setDate] = useState(new Date());\n\n  const schedule = props.schedule;\n  const calendar = getCalendar(date.getFullYear(), date.getMonth());\n\n  function getCellContent(day) {\n    const start = getDaysSinceEpoch(schedule.start);\n    const current = getDaysSinceEpoch(new Date(date.getFullYear(), date.getMonth(), day));\n\n    let text = null;\n    if (current >= start && (current - start) % schedule.interval === 0) {\n      text = schedule.text;\n    }\n\n    if (text) {\n      return (\n        <Tooltip placement=\"top\" title={text}>\n          <div className={classes.circle}>\n            <span style={{ color: \"white\" }}>{day}</span>\n          </div>\n        </Tooltip>\n      );\n    } else {\n      return day;\n    }\n  }\n\n  return (\n    <TableContainer component={Paper} style={{ width: \"500px\" }}>\n      <IconButton size=\"medium\" className={classes.back} onClick={() => setDate(previousMonth(date))}>\n        <ArrowBackIcon />\n      </IconButton>\n      <IconButton size=\"medium\" className={classes.forward} onClick={() => setDate(nextMonth(date))}>\n        <ArrowForwardIcon />\n      </IconButton>\n      <Typography className={classes.title} variant=\"h5\">{calendar.dateString}</Typography>\n      <Table size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Mon</TableCell>\n            <TableCell align=\"center\">Tue</TableCell>\n            <TableCell align=\"center\">Wed</TableCell>\n            <TableCell align=\"center\">Thu</TableCell>\n            <TableCell align=\"center\">Fri</TableCell>\n            <TableCell align=\"center\">Sat</TableCell>\n            <TableCell align=\"center\">Sun</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {Array.from(calendar.rows.entries()).map(([i, row]) => (\n            <TableRow key={i}>\n              {Array.from(row.entries()).map(([j, cell]) => (\n                <TableCell align=\"center\" key={j}>\n                  {getCellContent(cell.date)}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\n// https://stackoverflow.com/a/12739212/1466456\nfunction getDaysSinceEpoch(date) {\n  return Math.floor(date / 8.64e7);\n}\n\nfunction getCalendar(year, month) {\n  const daysInMonth = getDaysInMonth(year, month);\n  const start = new Date(year, month, 1);\n  const emptyCellsInStart = getDay(start);\n  const end = new Date(year, month, daysInMonth);\n  const emptyCellsInEnd = 6 - getDay(end);\n  const numberOfCells = emptyCellsInStart + daysInMonth + emptyCellsInEnd;\n  const numberOfWeeks = numberOfCells / 7;\n\n  const rows = [];\n  let current = 1;\n  for (let i = 0; i < numberOfWeeks; i++) {\n    const row = [];\n    if (i === 0) {\n      for (let j = 0; j < emptyCellsInStart; j++) {\n        row.push({});\n      }\n    }\n\n    while (row.length < 7 && current <= daysInMonth) {\n      row.push({ date: current });\n      current++;\n    }\n\n    if (i === numberOfWeeks - 1) {\n      for (let j = 0; j < emptyCellsInEnd; j++) {\n        row.push({});\n      }\n    }\n    rows.push(row);\n  }\n\n  return {\n    dateString: `${getMonthName(start.getMonth())} ${start.getFullYear()}`,\n    rows,\n  };\n}\n\nfunction getDaysInMonth(year, month) {\n  return new Date(year, month + 1, 0).getDate();\n};\n\n// Get day of week where 0 => Monday.\nfunction getDay(date) {\n  // In built-in getDay, 0 => Sunday.\n  const day = date.getDay() - 1;\n  return day === -1 ? 6 : day;\n}\n\nfunction getMonthName(month) {\n  const monthNames = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\",\n    \"October\", \"November\", \"December\"\n  ];\n  return monthNames[month];\n}\n\nfunction previousMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() - 1, 1);\n}\n\nfunction nextMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 1);\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport Calendar from \"./Calendar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Auth from \"../helpers/Auth\";\nimport Api from \"../helpers/Api\";\n\nconst sunlight = {\n  1: \"Low to indirect sunlight.\",\n  2: \"Bright indirect sunlight.\",\n  3: \"Full direct sunlight.\"\n};\n\nconst watering = {\n  1: \"Water thoroughly once a month.\",\n  2: \"Water thoroughly every 2 - 3 weeks.\",\n  3: \"Water thoroughly once a week.\"\n};\n\nconst wateringInterval = {\n  1: 28,\n  2: 14,\n  3: 7,\n};\n\nclass PlantView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plantData: null\n    };\n  }\n\n  // Fetch plantData from backend\n  async componentDidMount() {\n    // https://stackoverflow.com/questions/54114416/how-to-access-this-props-match-params-along-with-other-props\n    const result = await Api.request(\"GET\", `/plants/${this.props.match.params.id}`);\n    this.setState({ plantData: result.data })\n  }\n\n  render() {\n    const plantData = this.state.plantData;\n    if (!plantData) {\n      return <Container>No plant data found.</Container>\n    }\n\n    const wateringSchedule = {\n      start: new Date(),\n      interval: wateringInterval[plantData.growtherapy.water_needs],\n      text: \"Time to water this bad boy\",\n    };\n\n    return (\n      <Container>\n        <br />\n        <br />\n\n        <div style={{ display: \"grid\", gridTemplateColumns: \"50% 50%\" }}>\n          <img src={plantData.growtherapy.image_url} alt=\"plant\" style={{ width: \"90%\" }} />\n          <div style={{ display: \"grid\", gridTemplateRows: \"50% 50%\" }}>\n\n            <div style={{ display: \"grid\", gridTemplateColumns: \"auto auto\", columnGap: \"5px\" }}>\n\n              <Typography color=\"primary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                Name:\n              </Typography>\n              \n              <Typography color=\"secondary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                {plantData.common_name}\n              </Typography>\n\n              <Typography color=\"primary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                Botanical name:\n              </Typography>\n\n              <Typography color=\"secondary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                {plantData.scientific_name}\n              </Typography>\n\n              <Typography color=\"primary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                Family:\n              </Typography>\n\n              <Typography color=\"secondary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                {plantData.family}\n              </Typography>\n\n              <Typography color=\"primary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                Year:\n              </Typography>\n\n              <Typography color=\"secondary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                {plantData.year}\n              </Typography>\n\n              <Typography color=\"primary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                Water Needs:\n              </Typography>\n              <Typography color=\"secondary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                {watering[plantData.growtherapy.water_needs]}\n              </Typography>\n\n              <Typography color=\"primary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                Light Needs:\n              </Typography>\n              <Typography color=\"secondary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                {sunlight[plantData.growtherapy.light_needs]}\n              </Typography>\n\n              <Typography color=\"primary\" variant=\"body1\" style={{ fontSize: 15 }}>\n                Notes:\n              </Typography>\n              <Typography color=\"secondary\" variant=\"body1\"style={{ fontSize: 15 }}>\n                {plantData.growtherapy.notes}\n              </Typography>\n            </div>\n            \n            {Auth.getUserId() ? (\n              <Calendar schedule={wateringSchedule} />\n            ) : <></>}\n          </div>\n        </div>\n\n      </Container>\n    )\n  }\n}\n\nexport default withRouter(PlantView);\n","import React from \"react\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  HashRouter as Router,\n  withRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Auth from \"./helpers/Auth\";\nimport Api from \"./helpers/Api\";\n\nimport Navigation from \"./components/Navigation\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport Home from \"./components/Home\";\nimport AboutUs from \"./components/AboutUs\";\nimport Plants from \"./components/Plants\";\nimport FAQ from \"./components/FAQ\";\nimport ContactUs from \"./components/ContactUs\";\n\nimport Login from \"./components/Login\";\nimport ProfileView from \"./components/ProfileView\";\nimport ErrorView from \"./components/ErrorView\";\nimport SignUp from \"./components/SignUp\";\nimport Message from \"./components/Message\";\nimport WelcomeBack from \"./components/WelcomeBack\";\nimport PlantView from \"./components/PlantView\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#013F2B\",\n    },\n    secondary: {\n      main: \"#009572\",\n    },\n  },\n  typography: {\n    fontFamily: [\"Papyrus\"],\n    fontSize: 12,\n    fontWeightRegular: \"600\"\n  },\n});\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: Auth.getUserId(),\n      loginError: \"\",\n    };\n  }\n\n  async doLogin(email, password) {\n    const body = { email, password };\n    const response = await Api.request(\"POST\", \"/users/login\", body);\n    if (response.ok) {\n      Auth.loginUser(response.data.token, response.data.userId);\n      this.setState({ userId: response.data.userId, loginError: \"\" });\n    } else {\n      this.setState({ loginError: response.error });\n    }\n    return response.ok;\n  }\n\n  doLogout() {\n    Auth.logoutUser();\n    this.setState({ userId: \"\" });\n    this.props.history.push(\"/\");\n  }\n\n  async doSignUp(newFirstName, newLastName, newEmail, newPassword) {\n    const newUser = {\n      first_name: newFirstName,\n      last_name: newLastName,\n      email: newEmail,\n      password: newPassword,\n    };\n    console.log(newUser);\n\n    try {\n      const response = await Api.request(\"POST\", \"/users/register\", newUser);\n      if (response.ok) {\n        console.log(\"Registration succeeded\");\n      } else {\n        console.log(\n          \"Registration failed\",\n          response.status,\n          response.statusText\n        );\n      }\n      return response.ok;\n    } catch (err) {\n      console.log(\"Registration failed:\", err.message);\n    }\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Navigation\n            userId={this.state.userId}\n            doLogout={(e) => this.doLogout()}\n          />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n\n            <Route path=\"/about-us\" exact>\n              <AboutUs />\n            </Route>\n\n            <Route path=\"/plants\" exact>\n              <Plants />\n            </Route>\n\n            <Route path=\"/FAQ\" exact>\n              <FAQ />\n            </Route>\n\n            <Route path=\"/contact-us\" exact>\n              <ContactUs />\n            </Route>\n\n            <Route path=\"/log-in\" exact>\n              <Login\n                login={(e, p) => this.doLogin(e, p)}\n                error={this.state.loginError}\n              />\n            </Route>\n\n            <Route path=\"/sign-up\" exact>\n              <SignUp register={(f, l, e, p) => this.doSignUp(f, l, e, p)} />\n            </Route>\n\n            <PrivateRoute\n              path=\"/users/:userId/profile\"\n              exact\n              component={ProfileView}\n            />\n\n            <Route path=\"/welcome\" exact>\n              <Message />\n            </Route>\n\n            <Route path=\"/welcome-back\" exact>\n              <WelcomeBack />\n            </Route>\n\n            <Route path=\"/plant-view/:id\" exact>\n              <PlantView />\n            </Route>\n\n            <ErrorView code=\"404\" text=\"Not Found\" />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}